from tkinter import *
from math import factorial

# Initialize the main window
root = Tk()
root.title('DataFlair - Calculator')

# Input field
display = Entry(root)
display.grid(row=1, columnspan=6, sticky=N+E+W+S)

# Function to update display with numbers
def get_variables(num):
    current = display.get()
    display.delete(0, END)
    display.insert(0, current + str(num))

# Function to update display with operators
def get_operation(operator):
    current = display.get()
    display.delete(0, END)
    display.insert(0, current + operator)

# Function to clear the display
def clear_all():
    display.delete(0, END)

# Function to undo the last character
def undo():
    current = display.get()
    if len(current):
        display.delete(len(current) - 1, END)

# Function to calculate the result
def calculate():
    try:
        result = eval(display.get())
        clear_all()
        display.insert(0, result)
    except Exception:
        clear_all()
        display.insert(0, "Error")

# Function to calculate factorial
def fact():
    try:
        number = int(display.get())
        result = factorial(number)
        clear_all()
        display.insert(0, result)
    except Exception:
        clear_all()
        display.insert(0, "Error")

# Adding buttons to the calculator
Button(root, text="1", command=lambda: get_variables(1)).grid(row=2, column=0, sticky=N+S+E+W)
Button(root, text="2", command=lambda: get_variables(2)).grid(row=2, column=1, sticky=N+S+E+W)
Button(root, text="3", command=lambda: get_variables(3)).grid(row=2, column=2, sticky=N+S+E+W)

Button(root, text="4", command=lambda: get_variables(4)).grid(row=3, column=0, sticky=N+S+E+W)
Button(root, text="5", command=lambda: get_variables(5)).grid(row=3, column=1, sticky=N+S+E+W)
Button(root, text="6", command=lambda: get_variables(6)).grid(row=3, column=2, sticky=N+S+E+W)

Button(root, text="7", command=lambda: get_variables(7)).grid(row=4, column=0, sticky=N+S+E+W)
Button(root, text="8", command=lambda: get_variables(8)).grid(row=4, column=1, sticky=N+S+E+W)
Button(root, text="9", command=lambda: get_variables(9)).grid(row=4, column=2, sticky=N+S+E+W)

Button(root, text="AC", command=lambda: clear_all()).grid(row=5, column=0, sticky=N+S+E+W)
Button(root, text="0", command=lambda: get_variables(0)).grid(row=5, column=1, sticky=N+S+E+W)
Button(root, text=".", command=lambda: get_variables(".")).grid(row=5, column=2, sticky=N+S+E+W)

Button(root, text="+", command=lambda: get_operation("+")).grid(row=2, column=3, sticky=N+S+E+W)
Button(root, text="-", command=lambda: get_operation("-")).grid(row=3, column=3, sticky=N+S+E+W)
Button(root, text="*", command=lambda: get_operation("*")).grid(row=4, column=3, sticky=N+S+E+W)
Button(root, text="/", command=lambda: get_operation("/")).grid(row=5, column=3, sticky=N+S+E+W)

Button(root, text="pi", command=lambda: get_operation("*3.14")).grid(row=2, column=4, sticky=N+S+E+W)
Button(root, text="%", command=lambda: get_operation("%")).grid(row=3, column=4, sticky=N+S+E+W)
Button(root, text="(", command=lambda: get_operation("(")).grid(row=4, column=4, sticky=N+S+E+W)
Button(root, text="exp", command=lambda: get_operation("**")).grid(row=5, column=4, sticky=N+S+E+W)

Button(root, text="<-", command=lambda: undo()).grid(row=2, column=5, sticky=N+S+E+W)
Button(root, text="x!", command=lambda: fact()).grid(row=3, column=5, sticky=N+S+E+W)
Button(root, text=")", command=lambda: get_operation(")")).grid(row=4, column=5, sticky=N+S+E+W)
Button(root, text="^2", command=lambda: get_operation("**2")).grid(row=5, column=5, sticky=N+S+E+W)
Button(root, text="=", command=lambda: calculate()).grid(columnspan=6, sticky=N+S+E+W)

# Run the main loop
root.mainloop()
